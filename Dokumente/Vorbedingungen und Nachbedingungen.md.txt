## ğŸ“œ Vorbedingungen und Nachbedingungen

### ğŸ“Œ Vorbedingungen (Preconditions)
Vorbedingungen sind die notwendigen Bedingungen, die erfÃ¼llt sein mÃ¼ssen, bevor eine bestimmte Funktion oder Methode aufgerufen wird. Sie garantieren, dass das System in einem erwarteten Zustand ist, damit der Code korrekt ausgefÃ¼hrt werden kann. Im Kontext des `Task Management System` kÃ¶nnten folgende Vorbedingungen bestehen:

1. **Datenbankverbindung ist vorhanden:**
   - Vor dem Zugriff auf die Datenbank mÃ¼ssen die Verbindungsparameter in der `App.config` korrekt konfiguriert sein.
   - **Beispiel:** Die Verbindungszeichenfolge fÃ¼r den SQL Server sollte wie folgt aussehen:
     ```xml
     <connectionStrings>
         <add name="TaskManagementDB"
              connectionString="Server=DESKTOP-QDJ0VMJ\SQLEXPRESS;Database=TaskManagementDB;Trusted_Connection=True;"
              providerName="System.Data.SqlClient" />
     </connectionStrings>
     ```
2. **Datenbank ist migriert:**
   - Alle Migrationen mÃ¼ssen angewendet sein, damit die Datenbank die erforderlichen Tabellen (`Users`, `Tasks`) und Spalten enthÃ¤lt.
   - **Befehl:** FÃ¼hre die Migrationen mit folgendem Befehl aus:
     ```bash
     Update-Database
     ```

3. **Benutzer existieren in der Datenbank:**
   - Es mÃ¼ssen mindestens ein Benutzer in der `Users`-Tabelle vorhanden sein, um Aufgaben korrekt zuweisen zu kÃ¶nnen.
   - **Beispiel:** Ein Standardbenutzer wird normalerweise wÃ¤hrend der `Seed()`-Methode in der Migration hinzugefÃ¼gt.

4. **Eingabewerte sind valide:**
   - Alle Eingabefelder (Titel, Beschreibung, Benutzer) mÃ¼ssen gÃ¼ltige Werte haben, bevor die Aufgabe erstellt oder bearbeitet werden kann.
   - **Beispiel:** Das Titelfeld darf nicht leer sein, und der Benutzer muss in der Dropdown-Liste ausgewÃ¤hlt sein.

### ğŸ“Œ Nachbedingungen (Postconditions)
Nachbedingungen sind die Bedingungen, die nach der erfolgreichen AusfÃ¼hrung einer Funktion oder Methode erfÃ¼llt sein mÃ¼ssen. Sie stellen sicher, dass die Operation korrekt abgeschlossen wurde. Im `Task Management System` umfassen Nachbedingungen Folgendes:

1. **Aufgabe wird erfolgreich in der Datenbank gespeichert:**
   - Nach dem Erstellen oder Bearbeiten einer Aufgabe sollte die `Tasks`-Tabelle in der Datenbank den neuen oder aktualisierten Datensatz enthalten.
   - **Beispiel:** Eine neue Aufgabe sollte mit einem eindeutigen `Id` und den entsprechenden Benutzerinformationen in der `Tasks`-Tabelle hinzugefÃ¼gt werden.

2. **Datenanzeige wird aktualisiert:**
   - Die BenutzeroberflÃ¤che (UI) muss nach jeder CRUD-Operation (Create, Read, Update, Delete) aktualisiert werden, um den aktuellen Stand der Daten anzuzeigen.
   - **Beispiel:** Nach dem Erstellen einer Aufgabe wird die `dataGridView`-Anzeige sofort aktualisiert.

3. **Benutzer wird informiert:**
   - Bei erfolgreichen Operationen (z.B. Aufgabe wurde erstellt, Benutzer wurde gelÃ¶scht) oder bei Fehlern (z.B. Eingabewerte sind nicht korrekt) wird dem Benutzer eine entsprechende Nachricht angezeigt.
   - **Beispiel:** Ein `MessageBox`-Dialog zeigt an, dass die Aufgabe erfolgreich erstellt wurde.

4. **CSV-Datei ist erfolgreich exportiert:**
   - Nach dem Klicken auf den Export-Button wird eine CSV-Datei erstellt, die alle aktuellen Aufgaben enthÃ¤lt, und der Benutzer wird nach dem Speicherort gefragt.
   - **Beispiel:** Der Export sollte die aktuelle `dataGridView`-Tabelle in der CSV-Datei speichern.

### ğŸ“‚ Beispiel einer Methode mit Vor- und Nachbedingungen

```csharp
// Methode zum HinzufÃ¼gen einer neuen Aufgabe
public void AddTask(Task task)
{
    // Vorbedingungen prÃ¼fen
    if (string.IsNullOrEmpty(task.Title))
        throw new ArgumentException("Der Titel darf nicht leer sein.");
    if (task.UserId == 0)
        throw new ArgumentException("Ein Benutzer muss zugewiesen werden.");

    // Methode ausfÃ¼hren
    _context.Tasks.Add(task);
    _context.SaveChanges();

    // Nachbedingungen sicherstellen
    Debug.Assert(_context.Tasks.Any(t => t.Id == task.Id), "Die Aufgabe wurde nicht korrekt gespeichert.");
}
```

- **Vorbedingungen:** ÃœberprÃ¼ft, ob der Titel nicht leer ist und ein gÃ¼ltiger Benutzer ausgewÃ¤hlt wurde.
- **Nachbedingungen:** Stellt sicher, dass die Aufgabe nach dem Speichern in der Datenbank existiert.